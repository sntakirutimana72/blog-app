---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: authenticate
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/auth_success"
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/auth"
  "/api/v1/users/{user_id}/posts/{post_id}/comments":
    parameters:
    - name: user_id
      in: path
      description: Author Id
      required: true
      schema:
        type: integer
    - name: post_id
      in: path
      description: Post Id
      required: true
      schema:
        type: integer
    get:
      summary: list comments
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comments"
        '404':
          description: comments not found
  "/api/v1/posts/{post_id}/comments":
    parameters:
    - name: post_id
      in: path
      description: Post Id
      required: true
      schema:
        type: integer
    post:
      summary: create comment
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '201':
          description: created successfully!
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_failed"
        '401':
          description: unauthorized
        unprocessable_entity:
          description: Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_failed"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/comment"
  "/api/v1/users/{user_id}/posts":
    parameters:
    - name: user_id
      in: path
      description: Author Id
      required: true
      schema:
        type: integer
    get:
      summary: list posts
      responses:
        '200':
          description: ''
        '404':
          description: No posts found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
      in: header
      required: true
  schemas:
    auth:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    auth_success:
      type: object
      properties:
        token:
          type: string
      required: token
    comments:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          text:
            type: string
          post_id:
            type: integer
          author_id:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
    posts:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          text:
            type: string
          author_id:
            type: integer
          comments_counter:
            type: integer
          likes_counter:
            type: integer
          created_at:
            type: string
          updated_at:
            type: string
    comment:
      type: object
      properties:
        text:
          type: string
      required: text
    comment_failed:
      type: object
      properties:
        error:
          type: string
